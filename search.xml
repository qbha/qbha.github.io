<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基本数据类型和引用数据类型的区别</title>
      <link href="/post/15e5016d.html"/>
      <url>/post/15e5016d.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、-存储上的区别"><a href="#一、-存储上的区别" class="headerlink" title="一、.存储上的区别"></a>一、.存储上的区别</h3><p>1.基本数据类型是存放在栈中的简单数据段。</p><p>2.引用数据类型是存放在堆内存中的对象，在栈内存中存放的是堆内存中具体内容的引用地址，通过这个地址可以快速查找到对象。</p><h3 id="二、比较上的区别"><a href="#二、比较上的区别" class="headerlink" title="二、比较上的区别"></a>二、比较上的区别</h3><p>1.基本数据类型的比较是值的比较</p><p>var a = ‘{}’</p><p>var b = ‘{}’</p><p>console.log(a == b) //true</p><p>直接比较值，看起来一样那么他就是一样的。</p><p>2.引用类型的比较是引用的比较</p><p>var a = {}</p><p>var b = {}</p><p>console.log(a == b) //false</p><p>问：看起来明明一样为什么会是false？</p><p>答：因为引用类型比较的是地址，也就是比较两个对象保存在栈区的指向堆内存的地址是否相同，虽然看起来一样，但是他们指向堆内存的地址是不一样的，所以两个对象不相等。</p><h3 id="三、赋值上的区别"><a href="#三、赋值上的区别" class="headerlink" title="三、赋值上的区别"></a>三、赋值上的区别</h3><p>1.基本数据类型的赋值是简单赋值，如果一个变量向另一个变量赋值基本类型的值，会在变量对象上创建一个新值，然后把这个值复制到为新变量分配的位置上。</p><p>var a = 10</p><p>var b = a</p><p>a++</p><p>console.log(a) //11</p><p>console.log(b) //10</p><p>a在内存中保存的值是10，当使用a的值来初始化b时，b中也保存了10，这两个值是完全独立的，相当于b把a的值复制了一份，所以两个变量的任何操作都不会互相影响。</p><p>2.引用类型的赋值是对象引用</p><p>var a = {}</p><p>var b = a</p><p>a.name = “haha”</p><p>console.log(a.name) //haha</p><p>console.log(b.name) //haha</p><p>b.age = 29</p><p>console.log(a.age) //29</p><p>console.log(b.age) //29</p><p>当一个变量向另一个变量赋值引用类型的值时，同样也会将栈内存中的值复制一份放到新变量分配的空间中，但是引用类型保存在栈内存中的变量是一个地址，这个地址指向的是堆内存中的对象，所以这个变量其实复制了一个地址，两个地址指向同一个对象，改变其中任何一个变量都会互相影响。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>传统书信中的结束语</title>
      <link href="/post/e7db1469.html"/>
      <url>/post/e7db1469.html</url>
      
        <content type="html"><![CDATA[<p>1.言不尽思，再祈珍重</p><p>【释义】想说的话没能在信里全部表达出来，再次希望你能珍重身体。</p><p>2.投笔伤情，临书惘惘</p><p>【释义】面对所写的书信，心中十分怅惘，表达对对方的思念之情。</p><p>3.渐入严寒，伏惟珍重</p><p>【释义】渐渐地进入寒冷的冬天了，希望（您）多多保重身体。</p><p>4.秋风萧萧，至祈摄卫</p><p>【释义】秋天天气变凉，真挚地提醒你要保重身体。</p><p>5.兹际炎暑，希自珍卫</p><p>【释义】现在正值炎夏酷热之际，希望您对自己的身体予以珍惜爱护。</p><p>6.春寒料峭，善自珍重。</p><p>【释义】天气虽暖还寒，尚望您自己多加保重。</p><p>7.情长纸短，不尽依依。</p><p>【释义】简短的信纸无法写完深长的情意，就不在这纸上尽述了。</p><p>8.天寒露重，望君保重</p><p>【释义】天气非常的寒冷，路上的露水很多，希望你能一路顺风，照顾好自己。</p><p>10.书未尽情，余候面叙</p><p>【释义】用书信难以充分表达情意，等以后我们见面再说。</p><p>11.暂书至此，不复一一</p><p>【释义】暂且先写到这里吧，就不再逐一叙说了。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瀑布式开发和敏捷开发区别</title>
      <link href="/post/be383a84.html"/>
      <url>/post/be383a84.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、瀑布开发"><a href="#一、瀑布开发" class="headerlink" title="一、瀑布开发"></a>一、瀑布开发</h3><p>瀑布模型式是最典型的预见性的方法，严格遵循预先计划的需求、分析、设计、编码、测试的步骤顺序进行。步骤成果作为衡量进度的方法，例如需求规格，设计文档，测试计划和代码审阅等等。</p><p>瀑布式的主要的问题是它的严格分级导致的自由度降低，项目早期即作出承诺导致对后期需求的变化难以调整，代价高昂。瀑布式方法在需求不明并且在项目进行过程中可能变化的情况下基本是不可行的。</p><p>有论文统计，它是造成70%软件开发失败的原因。</p><p>瀑布开发大体分为这几个阶段：需求分析、设计、编码、测试、维护。</p><p>目前来说2B的传统企业，包括ERP，MES，WMS，CRM，OA，IBMS等系统当中可以经常见到他们的影子。现在这种模式仍然流行在一些大的项目或者是外包的一些项目当中。</p><h4 id="瀑布模型作为最典型的预见性方法，其优点主要在于："><a href="#瀑布模型作为最典型的预见性方法，其优点主要在于：" class="headerlink" title="瀑布模型作为最典型的预见性方法，其优点主要在于："></a>瀑布模型作为最典型的预见性方法，其优点主要在于：</h4><p>阶段清晰：从计划到开发最后到上线运行，三个阶段非常清晰。</p><p>时间顺序：每个阶段顺序必须是从上到下，严格按照时间先后进行。</p><p>环环相扣：在每一个阶段都必须有产出物然后才能进入到下一个阶段进行。</p><p>黑盒模式：每个阶段都有各自的角色和分工，各自只关心自己的任务。比如需求阶段开发人员无需关注。</p><h4 id="而其缺点也突出："><a href="#而其缺点也突出：" class="headerlink" title="而其缺点也突出："></a>而其缺点也突出：</h4><p>需求隔离：由于各阶段的人员只能接触到自己工作范围内的东西，所以对客户需求的理解程度高低不等，开发人员更像是定义为流水线上的工人。</p><p>变更代价大：既然叫做瀑布，就意味着不应该走回头路。否则如果出现返工，付出的代价会很大。需求变更，编码人员会很强的抵触情绪。</p><p>束缚创造性：由于强调文档管理，所以管理人员会比较喜欢，但是他束缚了开发人员的创造性。</p><p>周期漫长：整个开发持续的生命周期很长，需求和设计的时间会耗费特别多，有时候会占用三分之一甚至更多时间，这样整个周期就会变长，大都在半年到一年左右的时间，所以更适合需求相对稳定的大项目。</p><h3 id="二、敏捷软件开发"><a href="#二、敏捷软件开发" class="headerlink" title="二、敏捷软件开发"></a>二、敏捷软件开发</h3><p>敏捷软件开发是基于敏捷宣言定义的价值观和原则的一系列方法和实践的总称。自组织、跨职能团队运用适合他们自身环境的实践进行演进得出解决方案。</p><p>敏捷开发以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发。</p><p>在敏捷开发中，软件项目在构建初期被切分成多个子项目，各个子项目的成果都经过测试，具备可视、可集成和可运行使用的特征。换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。</p><p>敏捷开发借助互联网浪潮开始流行起来，相比瀑布模式，敏捷无疑更加贴近互联网时代背景下快速发展变化的市场环境以及业务需求。</p><h4 id="简单总结，敏捷开发的优点在于："><a href="#简单总结，敏捷开发的优点在于：" class="headerlink" title="简单总结，敏捷开发的优点在于："></a>简单总结，敏捷开发的优点在于：</h4><p>更快交付价值</p><p>更低的风险</p><p>拥抱变化</p><p>更好的质量</p><p>持续改进</p><p>更高的客户满意度</p><p>更高的团队满意度</p><p>……</p><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><p>很难进行准确的资源规划</p><p>很难准确的定义“轻量的“或必要的文档</p><p>很难把握整体产品的一致性</p><p>很难预测有限的终点</p><p>很难有效地进行度量</p><p>…….</p><p>从上文来看，敏捷开发似乎要优于瀑布开发，但本质并非如此。</p><p>两者都有自己适用的范围，而当下这VUCA时代，大部分项目可能都适合用敏捷开发，但仍旧有一部分确定性很强的项目会适合适用瀑布开发。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程概论案例分析报告</title>
      <link href="/post/191bfb4f.html"/>
      <url>/post/191bfb4f.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-案例选题"><a href="#1-案例选题" class="headerlink" title="1 案例选题"></a>1 案例选题</h1><p>案例所属章节：第1章 工程与社会</p><p>案例名称：苹果人脸识别技术Face ID</p><p>案例反映的问题：</p><blockquote><p>随着移动设备的普及和人工智能技术的发展，生物识别技术在身份验证领域的应用越来越广泛，并且成为了一种趋势。苹果公司的人脸识别技术是生物识别技术中的一种，它可以提高身份验证的安全性，避免身份被盗用或冒用。同时，与传统的密码或指纹识别相比，人脸识别技术具有更高的可靠性和不可复制性，因此，越来越多的移动设备采用了生物识别技术来进行身份验证。</p><p>然而，生物识别技术也带来了一些潜在的问题。例如，生物识别技术依赖于个人生物特征数据的采集和存储，如果这些数据被泄露或被黑客攻击，将导致用户的隐私受到威胁。此外，由于生物识别技术基于人工智能算法，可能会存在算法偏差和错误的情况，例如，无法识别面部特征受到损伤的用户。</p><p>因此，在使用生物识别技术时，需要注意保护用户的隐私和数据安全，并建立有效的安全机制来应对潜在的风险和问题。同时，还需要持续优化算法和提高生物识别技术的准确性和稳定性。</p></blockquote><p>案例来源：苹果公司官方网站</p><h1 id="2-案例内容"><a href="#2-案例内容" class="headerlink" title="2 案例内容"></a>2 案例内容</h1><p>苹果公司的人脸识别技术在当时的手机市场上引起了巨大的轰动，它使得用户不再需要使用传统的密码或指纹解锁，而是通过面部识别进行快速和方便的身份验证。在这个案例中，我们将深入探讨苹果公司的人脸识别技术发展过程，以及它在手机市场中所带来的影响和改变。</p><h2 id="2-1-苹果人脸识别技术Face-ID前世今生"><a href="#2-1-苹果人脸识别技术Face-ID前世今生" class="headerlink" title="2.1 苹果人脸识别技术Face ID前世今生"></a>2.1 苹果人脸识别技术Face ID前世今生</h2><p>起：苹果公司的人脸识别技术起源于2013年，当时苹果公司收购了一家以色列公司PrimeSense，这家公司专注于开发3D传感器技术。苹果公司随后利用这项技术开发了Face ID。2017年，苹果公司推出了搭载Face ID技术的iPhone X，引起了广泛关注。</p><p>承：Face ID是一种3D人脸识别技术，它通过对用户面部进行3D扫描和建模来实现人脸识别。这种技术比传统的2D人脸识别更加安全，因为它可以检测用户是否真的在使用手机，而不是使用一张照片或者面具来欺骗系统。同时，Face ID的误识率仅为50万分之一，比Touch ID指纹识别技术更加安全。</p><p>转：Face ID不仅可以用于解锁手机，还可以用于在购物、银行、保险和医疗等领域进行身份验证。这使得用户可以方便地使用手机进行在线支付，或者在医院或银行进行身份验证。同时，苹果公司不断对Face ID技术进行改进，使得它的识别速度和准确性得到了提高。</p><p>合：随着苹果公司对Face ID技术的不断改进，Face ID在iPhone、iPad和Mac等设备上得到了广泛应用。同时，苹果公司还将Face ID技术授权给其他公司使用，使得人脸识别技术在全球范围内得到普及。</p><h2 id="2-2-苹果人脸识别技术Face-ID实现原理"><a href="#2-2-苹果人脸识别技术Face-ID实现原理" class="headerlink" title="2.2 苹果人脸识别技术Face ID实现原理"></a>2.2 苹果人脸识别技术Face ID实现原理</h2><p>苹果的人脸识别技术Face ID的实现原理基于TrueDepth相机系统，使用了多项技术和组件，包括以下几个方面：</p><p>3D感测器：TrueDepth相机系统采用了3D感测器，可以感知用户的面部轮廓和深度信息。该3D感测器由红外摄像头、点阵投影器和红外光源组成。</p><p>红外摄像头：TrueDepth相机系统中的红外摄像头可以捕捉用户的面部图像，用于识别和匹配。</p><p>点阵投影器：TrueDepth相机系统中的点阵投影器会向用户的面部投射30,000多个红外光点，并记录每个光点的反射情况，以创建用户的3D面部模型。</p><p>红外光源：TrueDepth相机系统中的红外光源可以在低光环境下进行面部扫描，并检测出不同表面的深度差异，以构建3D面部模型。</p><p>图1 iPhone X上的传感器</p><p>Face ID的工作流程如下：</p><p>当用户将设备放在面前时，TrueDepth相机系统开始工作，向用户的面部投射30,000多个红外光点。</p><p>红外摄像头捕捉用户的面部图像，并将其发送到设备上的Secure Enclave中进行处理。</p><p>Secure Enclave使用存储在其中的神经网络模型，对面部图像进行处理和分析，以确定用户的面部特征。</p><p>Secure Enclave将面部特征与预先存储在设备上的面部特征进行比较和匹配，以验证用户的身份。</p><p>如果面部特征匹配成功，则设备将解锁，否则将要求用户再次尝试或使用其他解锁方法。</p><p>图2 苹果采用FaceID技术</p><p>Face ID的实现原理可以确保用户的面部特征得到安全保护，因为所有的面部图像都被处理和存储在设备上，不会被发送到服务器或其他地方进行验证。同时，Face ID的高精度和低误识率使其成为一种高度安全和方便的身份认证方式。</p><h2 id="2-3-苹果人脸识别技术影响与成就"><a href="#2-3-苹果人脸识别技术影响与成就" class="headerlink" title="2.3 苹果人脸识别技术影响与成就"></a>2.3 苹果人脸识别技术影响与成就</h2><p>1. 提供更加高级的身份验证：苹果人脸识别技术Face ID通过3D传感器对用户面部进行扫描，从而实现高度准确的身份验证。相比传统的身份验证方式，如密码和指纹识别，Face ID更加安全、方便和快捷。</p><p>2. 提高了设备安全性：通过Face ID，苹果能够提供更加安全的设备解锁和支付验证。这种技术能够检测到使用面具、假发等伪装，从而防止黑客利用假面具等方式进行设备解锁和支付。</p><p>3. 改善了用户体验：Face ID相比指纹识别更加方便快捷，并且可以在低光环境和弱光条件下使用。这种技术让用户能够更加便捷地使用设备，同时提高了用户体验。</p><p>4. 面部数据隐私：Face ID将用户的面部数据转换成一个数字码，这种技术保护了用户的面部数据隐私。这个数字码只存储在设备本地，不会上传到云端或者其他第三方平台。</p><h1 id="3-案例分析报告"><a href="#3-案例分析报告" class="headerlink" title="3 案例分析报告"></a>3 案例分析报告</h1><h2 id="3-1-苹果人脸识别技术Face-ID主要技术"><a href="#3-1-苹果人脸识别技术Face-ID主要技术" class="headerlink" title="3.1 苹果人脸识别技术Face ID主要技术"></a>3.1 苹果人脸识别技术Face ID主要技术</h2><p>本案例涉及的理论和工具包括深度学习、计算机视觉、人工智能、图像处理等领域的基础理论和相关工具，如TensorFlow、OpenCV、Keras等开源框架和算法库。</p><p>苹果人脸识别技术Face ID主要使用的技术和算法：</p><p>深度相机技术：苹果公司采用了深度相机技术来进行人脸识别，这种技术可以通过红外线传感器来感知物体的深度，从而为人脸识别提供更加精确的深度信息。苹果采用的深度相机技术可以在低光环境下进行准确的人脸识别。</p><p>3D建模技术：苹果公司的人脸识别技术使用了3D建模技术，可以为人脸提供更加准确的三维模型。这种技术可以在光线不足或面部遮挡的情况下进行人脸识别。采用3D建模技术可以对人脸进行更加准确的建模，可以大大提高人脸识别的准确率。</p><p>面部识别技术：苹果公司的人脸识别技术可以通过检测面部特征来进行人脸识别。这种技术可以通过面部识别进行设备解锁，也可以用于人脸支付等场景。在人脸识别中，面部识别技术是非常关键的一环。</p><p>机器学习技术：苹果公司的人脸识别技术使用了机器学习技术，可以根据用户使用设备的情况来不断优化人脸识别算法。这种技术可以提高人脸识别的准确率和速度。采用机器学习技术可以不断优化算法，提高人脸识别的精度和速度。</p><p>隐私保护技术：苹果公司非常重视用户的隐私保护，在人脸识别技术方面也不例外。苹果公司的人脸识别技术在进行人脸识别时不会上传用户的面部信息，而是将面部信息存储在用户的设备上。这种隐私保护技术可以有效地保护用户的隐私，避免用户的面部信息被不当使用。</p><p>深度神经网络：苹果采用了深度神经网络来进行人脸识别。深度神经网络可以对输入图像进行多次卷积和池化操作，从而提取出更加丰富的特征信息，进而进行人脸识别。深度神经网络在训练时可以自动学习到人脸的特征，提高了人脸识别的准确率。</p><p>卷积神经网络：卷积神经网络是一种特殊的深度神经网络，可以有效地处理图像数据。苹果在人脸识别技术中使用了卷积神经网络，从而可以提取出人脸的特征，进而进行人脸识别。卷积神经网络具有计算效率高、准确率高等优点，在人脸识别中具有很好的应用前景。</p><p>神经网络嵌入（Neural Network Embedding）：神经网络嵌入是一种将高维数据映射到低维空间的技术，可以将人脸图像映射到低维空间中，从而实现人脸识别。苹果采用了神经网络嵌入技术，将人脸图像映射到128维空间中，并通过计算欧几里得距离来进行人脸匹配。</p><p>支持向量机（SVM）：支持向量机是一种常用的分类算法，可以将数据进行分类。在苹果的人脸识别技术中，支持向量机可以用于人脸特征的分类和判别。支持向量机具有较高的准确率和较好的泛化能力，在人脸识别中也具有一定的应用价值。</p><p>人脸对齐算法：人脸对齐算法可以将不同姿态下的人脸图像进行对齐，从而提高人脸识别的准确率。在苹果的人脸识别技术中，采用了人脸对齐算法，可以将不同角度、不同表情的人脸图像进行对齐，从而提高人脸识别的准确率。</p><p>图3 人脸识别</p><h2 id="3-2-苹果人脸识别技术的分析框架"><a href="#3-2-苹果人脸识别技术的分析框架" class="headerlink" title="3.2 苹果人脸识别技术的分析框架"></a>3.2 苹果人脸识别技术的分析框架</h2><p>本文采用SWOT分析框架，从内部和外部环境两个方面对苹果的人脸识别技术进行分析，以明确其优势、劣势、机会和威胁，并提出相关建议。</p><p>SWOT分析：</p><p>优势（Strengths）</p><p>a. 技术领先：苹果的人脸识别技术采用深度学习和计算机视觉等先进技术，实现快速、准确的面部识别，远远领先于其他同类产品。</p><p>b. 用户体验好：人脸识别技术可以实现快速解锁设备、支付等功能，大大提高了用户体验。</p><p>c. 安全性高：苹果的人脸识别技术采用了多种技术保障，如深度学习算法、硬件安全等，可以防止诈骗和恶意攻击，保障用户的安全。</p><p>劣势（Weaknesses）</p><p>a. 需要高性能硬件支持：苹果的人脸识别技术需要高性能的处理器和相机，因此在低端设备上可能无法实现。</p><p>b. 隐私问题：人脸识别技术涉及到用户的面部信息，一旦泄露会对用户的隐私带来风险，因此需要采取一些措施来保障用户的隐私。</p><p>机会（Opportunities）</p><p>a. 市场需求：用户对于快速、便捷、安全的身份验证需求日益增加，人脸识别技术在智能手机、支付、门禁等领域都有广泛的应用前景。</p><p>b. 技术进步：随着深度学习、计算机视觉等技术的不断发展，人脸识别技术将变得更加成熟、准确、稳定。</p><p>威胁（Threats）</p><p>a. 安全威胁：人脸识别技术需要大量的人脸图像和数据进行训练和识别，这些数据可能被黑客和恶意用户窃取，从而造成安全威胁。</p><p>b. 硬件厂商威胁：随着人脸识别技术的普及和应用，硬件厂商也在加速开发和推广相关硬件产品，这可能对苹果的市场占有率和竞争力带来一定的威胁。</p><p>c. 技术更新威胁：随着技术的不断更新和进步，人脸识别技术也可能被其他更加先进的技术所取代，从而对苹果的市场地位带来威胁。</p><p>建议：</p><p>基于上述SWOT分析，我提出以下建议：</p><p>1. 继续加强技术研发和创新，保持技术领先优势，增加硬件兼容性，提高对不同性能设备的支持。</p><p>2. 加强隐私保护措施，增强用户隐私安全保护，加强人脸数据的存储和传输加密等技术措施。</p><p>3. 加强与其他厂商的合作，例如与芯片厂商合作，加强芯片的设计和优化，提高硬件性能和适应性，降低成本。</p><p>4. 加强人工智能的投入和应用，提高算法的稳定性和准确性，进一步提升人脸识别技术的效率和性能。</p><p>结论：</p><p>苹果的人脸识别技术在技术领先、用户体验好、安全性高等方面具有优势，但也存在需要高性能硬件支持和隐私问题等劣势，未来应该加强技术创新和市场推广，同时加强隐私保护和与其他厂商的合作，提高算法的稳定性和准确性，进一步提升人脸识别技术的效率和性能，以保持市场竞争优势和稳定发展。</p><h2 id="3-3-人脸识别技术发展趋势"><a href="#3-3-人脸识别技术发展趋势" class="headerlink" title="3.3 人脸识别技术发展趋势"></a>3.3 人脸识别技术发展趋势</h2><p>人脸识别技术在实际应用当中不断成熟，其市场的需求不断增加，人脸识别的应用场景也在不断地被挖掘。当前的人脸识别系统主要包括四个组成部分：人脸图像采集及检测、人脸图像预处理、人脸图像特征提取以及匹配与识别。随着未来数据的增长，在人脸数据匹配方面将面临着更大的挑战。</p><p>大数据快速发展背景下，人脸识别技术必须有所创新。目前，已经出现了为公安大数据打造的云计算人脸识别技术，通过将人脸特征散布到多台电脑进行计算，获取更强的计算能力，同时基于云架构设计，实施混合多算法，提高大数据库容量下人脸图像的识别和对比特性。同时，由于部分时候设备或目标距离较远，获得的人脸图像质量较低，在此情况下人脸识别准确率会受到明显影响，需要利用人脸图像重建技术组建高质量图像，从而辅助提高人脸识别准确率，云计算为人脸图像重建也搭建出更便捷的交流沟通平台。</p><h1 id="4-苹果人脸识别FaceID技术的利与弊"><a href="#4-苹果人脸识别FaceID技术的利与弊" class="headerlink" title="4 苹果人脸识别FaceID技术的利与弊"></a>4 苹果人脸识别FaceID技术的利与弊</h1><h2 id="4-1-利"><a href="#4-1-利" class="headerlink" title="4.1 利"></a>4.1 利</h2><p>（1）提高信息安全性</p><p>FaceID技术采用三维建模和人工智能算法识别用户的面部特征，相较于传统的指纹识别技术更加安全可靠。指纹识别技术容易受到指纹模板的盗取或模拟指纹的攻击，而FaceID技术则可以更好地识别和防范这些攻击。同时，FaceID技术也可以防止其他人通过观察用户输入密码的方式来窃取密码，提高了用户的信息安全性。</p><p>（2）提高用户的便利性</p><p>相较于指纹识别技术，FaceID技术更加便利和快捷，无需用户将手指放在指纹传感器上。用户只需要将设备对准面部即可完成解锁、支付和认证等操作，这在某些场合下可以提高用户的便利性和使用体验。</p><p>图4 Face ID工作器件</p><p>（3）增加产品的竞争力</p><p>FaceID技术的推出，增加了苹果公司产品的竞争力。在信息安全日益重要的背景下，FaceID技术可以提高用户的信息安全性，增加了产品的附加值和吸引力。同时，FaceID技术也可以提高用户的使用体验和便利性，提高了产品的市场竞争力。</p><h2 id="4-2-弊"><a href="#4-2-弊" class="headerlink" title="4.2 弊"></a>4.2 弊</h2><p>（1）面部数据安全性问题</p><p>FaceID技术需要采集和存储用户的面部数据，这可能带来一定的面部数据安全性问题。如果FaceID技术的面部数据被黑客攻击或泄露，用户的面部数据可能被窃取，导致隐私泄露和安全问题。虽然苹果公司已经采取了一系列措施来保护用户的面部数据，如使用安全的芯片和数据加密技术等，但仍需要进一步加强面部数据的安全性保护，以防止数据被攻击者窃取或滥用。</p><p>（2）对一些人的识别率不高</p><p>FaceID技术对于一些人的识别率不高，如婴儿、小孩、老年人、面部残疾人士、戴口罩或口音重的人等。这可能导致这些人无法使用该技术或者在使用过程中出现一定的困难。虽然苹果公司已经采取了一些措施来改进这一问题，如提高算法的精度和可靠性等，但仍需要进一步改进和优化算法，以提高面部识别技术的普适性和适用性。</p><p>（3）可能增加对隐私的侵犯</p><p>FaceID技术需要采集和存储用户的面部数据，这可能增加对用户隐私的侵犯。如果面部数据被滥用或泄露，可能会对用户的隐私造成不可逆的损害。同时，FaceID技术可能被用于监控和跟踪用户的活动，这可能引发一些隐私问题和担忧。为了避免这种情况，需要加强面部数据的安全性保护，建立相应的隐私保护机制和法律法规，以确保用户的隐私得到有效保护。</p><h1 id="5-社会利益和风险"><a href="#5-社会利益和风险" class="headerlink" title="5 社会利益和风险"></a>5 社会利益和风险</h1><p>苹果人脸识别FaceID技术的推出，既带来了社会利益，也带来了一定的社会风险。</p><h2 id="5-1-社会利益"><a href="#5-1-社会利益" class="headerlink" title="5.1 社会利益"></a>5.1 社会利益</h2><p>（1）提高信息安全性</p><p>FaceID技术可以提高用户的信息安全性，防止密码泄露和身份盗窃等问题，为用户带来了实实在在的利益。</p><p>（2）增强用户的使用体验和便利性</p><p>相较于传统的指纹识别技术，FaceID技术更加便利和快捷，提高了用户的使用体验和便利性，为用户带来了更好的服务和体验。</p><p>图5 Face ID提供便利</p><p>（3）推动技术发展和创新</p><p>FaceID技术的推出，推动了人脸识别技术的发展和创新，为科技进步和产业发展做出了贡献。</p><h2 id="5-2-社会风险"><a href="#5-2-社会风险" class="headerlink" title="5.2 社会风险"></a>5.2 社会风险</h2><p>（1）隐私泄露和滥用问题</p><p>FaceID技术需要采集和存储用户的面部数据，如果这些数据被滥用或泄露，可能会对用户的隐私造成不可逆的损害。这可能会导致个人的隐私被侵犯，造成一定的社会风险。</p><p>（2）对一些人的不适用性</p><p>FaceID技术对一些人的识别率不高，如婴儿、小孩、老年人、面部残疾人士、戴口罩或口音重的人等。这可能导致这些人无法使用该技术或者在使用过程中出现一定的困难。</p><p>（3）技术滥用和歧视问题</p><p>FaceID技术可能被用于不良用途，如犯罪追踪、民族歧视等。这可能会对社会带来一定的风险和危害，需要加强相关的监管和管理，避免技术被滥用和歧视。</p><p>（4）社会心理问题</p><p>FaceID技术可能会对社会心理产生一定的影响，引发一些社会心理问题，如对隐私的担忧、对技术的依赖等。这需要加强公共教育和宣传，提高社会的科技素养和技术安全意识。</p><p>总的来说，苹果人脸识别FaceID技术的推出，既带来了一定的社会利益，也带来了一定的社会风险。需要加强技术研发和优化，加强隐私保护和安全性保障，建立相应的法律法规和监管机制，以确保FaceID技术的正常运行和社会安全稳定。同时，需要提高社会的科技素养和技术安全意识，加强公共教育和宣传，推动科技进步和人类文明的发展。</p><h1 id="6．数据安全和隐私隐患"><a href="#6．数据安全和隐私隐患" class="headerlink" title="6．数据安全和隐私隐患"></a>6．数据安全和隐私隐患</h1><p>数据安全是指保护数据不被非法获取、使用、披露、破坏和篡改的一系列措施和技术。数据安全对于现代社会来说越来越重要，因为我们的生活越来越依赖于数字技术和互联网，这些技术和网络都需要处理大量的个人和敏感信息。</p><p>为了保护个人信息和数据安全，中国政府制定了《数据安全法》。该法规定了数据安全的基本原则和管理要求，加强了个人信息保护和网络安全的管理，明确了数据安全的监督和执法机构。</p><p>《数据安全法》的主要内容包括：</p><ol><li>数据安全的基本原则：包括合法性、正当性、必要性、明确性、安全性等原则。</li></ol><p>2. 数据安全的管理要求：包括数据收集、存储、使用、传输、处理、销毁等方面的要求。</p><p>3. 个人信息保护：规定了个人信息的范围、收集和使用的要求，以及个人信息泄露的惩罚措施。</p><p>4. 网络安全管理：规定了网络安全的管理要求，包括网络安全保护、信息安全管理、网络安全事件应急等方面。</p><p>5. 数据安全评估和安全事件的处置要求：规定了数据安全评估的要求和安全事件的处置程序。</p><p>6. 数据安全监督和执法机构：明确了数据安全监督和执法机构的职责和权力。</p><p>通过《数据安全法》的实施，可以有效地保护个人信息和数据安全，维护国家安全和社会稳定。同时，个人也应该加强对自己个人信息的保护意识，不泄露个人信息，避免个人信息被滥用。</p><p>苹果人脸识别技术FaceID是一项复杂的工程问题，它通过使用TrueDepth摄像头和红外传感器来捕捉用户的面部图像，并使用高度复杂的算法来识别用户。虽然这种技术被广泛认为是安全和可靠的，但它仍然存在一些安全和隐私隐患。</p><h2 id="6-1-安全隐患"><a href="#6-1-安全隐患" class="headerlink" title="6.1 安全隐患"></a>6.1 安全隐患</h2><p>1. 生物识别攻击</p><p>生物识别攻击是指攻击者使用虚拟面具或3D打印的面部模型来欺骗FaceID系统，从而获得未经授权的访问权限。这种攻击需要攻击者有受害者的面部数据，但在公共场所，攻击者可能会通过拍照或其他方式获取这些数据。生物识别攻击可能会导致用户的隐私受到侵犯或数据被泄露。</p><p>2. 活体检测绕过</p><p>FaceID的活体检测功能用于检测正在注册的面部是否是真实的人脸而非照片或虚拟面具。然而，攻击者可以使用一些技巧来绕过这种检测。例如，他们可以使用特殊的眼镜或面具来欺骗系统，并通过识别这些设备来绕过活体检测。这种攻击可能会导致用户的隐私受到侵犯或数据被泄露。</p><p>3. 面部数据泄露</p><p>FaceID需要在设备上存储用户面部数据以进行识别，这些数据可能会被黑客窃取或被不当使用。如果攻击者能够获取用户面部数据，他们可以使用这些数据来欺骗FaceID系统，从而获取未经授权的访问权限。此外，如果面部数据被滥用，用户的隐私可能会受到侵犯。</p><h2 id="6-2-隐私隐患"><a href="#6-2-隐私隐患" class="headerlink" title="6.2 隐私隐患"></a>6.2 隐私隐患</h2><p>1. 设备上的面部数据存储</p><p>FaceID需要在设备上存储用户面部数据以进行识别，这意味着用户的面部数据存储在设备上，可能会受到黑客攻击或被不当使用。此外，用户可能担心他们的面部数据被滥用或共享给第三方。</p><p>图6 将面部信息保存到手机中</p><p>2. 面部数据传输</p><p>尽管苹果声称FaceID数据只存储在设备上，并且不会与任何外部服务器共享，但用户仍然需要在使用FaceID时放弃一些隐私权。例如，用户必须在设备上启用TrueDepth摄像头和红外传感器，这些设备可能会收集用户的面部数据和其他个人信息。</p><p>3. 面部识别追踪</p><p>FaceID可以记录用户的面部特征和使用方式，这可能会对用户的隐私产生影响。例如，FaceID可以记录用户何时使用设备以及使用设备的情况。这些数据可能会被苹果和第三方用于广告定位和用户追踪等目的。</p><h2 id="6-3罪与罚"><a href="#6-3罪与罚" class="headerlink" title="6.3罪与罚"></a>6.3罪与罚</h2><p>根据《中华人民共和国刑法》第二百五十三条规定，盗窃、侵占、非法出售、非法提供、非法获取、非法使用或者非法加工个人信息，情节严重的，处三年以下有期徒刑或者拘役，并处或者单处罚金；情节特别严重的，处三年以上七年以下有期徒刑，并处罚金。</p><p>根据《民法典》第111条规定：“自然人的个人信息受法律保护。任何组织或者个人需要获取他人个人信息的，应当依法取得并确保信息安全，不得非法收集、使用、加工、传输他人个人信息，不得非法买卖、提供或者公开他人个人信息。”</p><p>根据《民法典》第1038条规定：“信息处理者不得泄露或者篡改其收集、存储的个人信息；未经自然人同意，不得向他人非法提供其个人信息，但是经过加工无法识别特定个人且不能复原的除外。”</p><p>根据《网络安全法》第42条规定：“未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。”</p><p>根据《网络安全法》第44条规定：“任何个人和组织不得窃取或者以其他非法方法获取个人信息，不得非法出售或者非法向他人提供个人信息。”</p><p>根据《个人信息保护法》第10条规定：“任何组织、个人不得非法收集、使用、加工、传输他人个人信息，不得非法买卖、提供或者公开他人个人信息；不得从事危害国家安全、公共利益的个人信息处理活动。”</p><p>根据《消费者权益保护法》第29条规定：“经营者及其工作人员对收集的消费者个人信息必须严格保密，不得泄露、出售或者非法向他人提供。”</p><h2 id="6-4-缓解措施"><a href="#6-4-缓解措施" class="headerlink" title="6.4 缓解措施"></a>6.4 缓解措施</h2><p>1. 增强生物识别攻击防护</p><p>为了防止生物识别攻击，FaceID可以采用更高级的技术来检测虚拟面具和3D打印的面部模型。例如，FaceID可以使用深度学习算法来检测面部的深度和纹理，从而更有效地识别真实的人脸。此外，苹果可以通过更新软件来维护FaceID的安全性，以解决新的生物识别攻击。</p><p>2. 加强活体检测功能</p><p>为了防止活体检测被绕过，苹果可以通过更新软件来加强FaceID的活体检测功能。例如，他们可以添加更多的生物识别技术，如人脸表情、眨眼和头部移动等，以确保正在进行识别的面部是真实的人脸。</p><p>3. 提高面部数据的安全性</p><p>为了保护用户的面部数据，苹果可以采取一些措施来提高面部数据的安全性。例如，他们可以使用端到端加密来保护面部数据的传输，以及使用可信的硬件和软件来保护面部数据的存储。此外，苹果可以在设备中添加一些安全机制，如密码保护和双因素认证，以确保只有授权用户才能访问FaceID。</p><p>4. 加强用户隐私保护</p><p>为了保护用户的隐私，苹果可以采取一些措施来加强用户隐私保护。例如，他们可以提供更多的隐私选项，如关闭FaceID功能，以及在设备上提供更多的隐私控制选项，如禁用TrueDepth摄像头和红外传感器。</p><h2 id="6-5-案例分析"><a href="#6-5-案例分析" class="headerlink" title="6.5 案例分析"></a>6.5 案例分析</h2><p>2017年，一名越南安全公司的研究员声称他们利用一个3D打印的面具和一些化妆品，成功欺骗了FaceID，解锁了一部iPhone X1。这引发了人们对FaceID是否能够抵御高仿真的假脸攻击的担忧，以及对苹果公司是否夸大了FaceID的安全性的质疑。</p><p>2018年，一名美国律师发现他的妻子可以用FaceID解锁他的iPhone X，尽管他们没有任何血缘关系，也没有相似的面部特征2。这引发了人们对FaceID是否能够区分不同的个体差异的疑问，以及对苹果公司是否充分测试了FaceID在不同人群中的表现的质疑。</p><p>2019年，一名美国女子发现她在Facebook上购买的一部二手iPhone XR，无法重置FaceID，因为原来的主人没有删除他的面部数据3。这引发了人们对FaceID是否能够保护用户的数据隐私的担忧，以及对苹果公司是否应该提供更多的教育和指导信息的建议。</p><p>以上案例都反映了苹果公司在开发和推广FaceID时可能存在的数据安全和隐私隐患，主要包括以下几个方面：</p><p>1. FaceID是否能够防止被高仿真的假脸或其他物体欺骗，提高其抗攻击能力？</p><p>2. FaceID是否能够识别不同个体之间的微小差异，降低其误识别率和被冒用的风险？</p><p>3. FaceID是否能够保证用户的面部数据只在设备中存储和使用，不被泄露或滥用？</p><p>4. FaceID是否能够提供清晰和易操作的设置选项，让用户可以自由地开启或关闭FaceID，或者重置或删除自己的面部数据？</p><p>要解决这些问题，可能需要苹果公司在技术、法律、教育等方面做出更多努力。例如：</p><p>1. 在技术方面，苹果公司可以继续优化FaceID的算法和硬件，提高其识别精度和安全性，同时也要注意检测和修复可能存在的漏洞或缺陷。</p><p>2. 在法律方面，苹果公司可以遵守相关国家和地区对于人脸识别技术的法规和标准，明确其对于用户面部数据的收集、存储、使用和共享等方面的责任和义务，并在用户协议中进行充分披露。</p><p>3. 在教育方面，苹果公司可以加强对用户和开发者的培训和指导，让他们了解FaceID的工作原理、优点和缺点、使用方法和注意事项等，并提供有效的反馈渠道和客服支持。</p><h1 id="7．职业道德和规范及可能产生的伦理问题"><a href="#7．职业道德和规范及可能产生的伦理问题" class="headerlink" title="7．职业道德和规范及可能产生的伦理问题"></a>7．职业道德和规范及可能产生的伦理问题</h1><h2 id="7-1-职业道德和规范"><a href="#7-1-职业道德和规范" class="headerlink" title="7.1 职业道德和规范"></a>7.1 职业道德和规范</h2><p>1.尊重隐私和安全</p><p>FaceID技术涉及到用户隐私和安全问题，苹果公司需要确保其技术能够保护用户的个人信息和数据安全。在收集、存储和处理用户的面部数据时，苹果公司需要遵守相关的隐私政策和安全标准，保证用户的隐私和安全不会受到侵犯。</p><p>2.透明公开</p><p>苹果公司需要确保其FaceID技术的运作过程透明、公开，向用户提供详细的使用说明和数据收集政策。同时，苹果公司还需要确保用户能够轻松访问和管理他们的个人数据，并允许用户随时撤销使用FaceID的权限。</p><p>3.尊重多样性和包容性</p><p>FaceID技术需要考虑到用户的多样性和包容性，包括种族、性别、年龄、文化背景等方面。苹果公司需要确保其技术对不同用户的面部特征都能够进行准确识别，避免出现歧视等问题。</p><p>4.遵守法律法规</p><p>苹果公司需要遵守当地和国际法律法规，确保其FaceID技术符合相关的法律要求和标准。如果出现法律问题，苹果公司需要积极配合相关部门进行调查和解决。</p><h2 id="7-2-可能产生的伦理问题"><a href="#7-2-可能产生的伦理问题" class="headerlink" title="7.2 可能产生的伦理问题"></a>7.2 可能产生的伦理问题</h2><p>1.隐私和安全问题</p><p>FaceID技术需要收集、存储和处理用户的面部数据，这可能会对用户的隐私和安全造成威胁。如果这些数据被黑客攻击或者不当使用，将会对用户的个人信息造成损害。</p><p>2.歧视和偏见问题</p><p>FaceID技术需要在识别面部特征时考虑到多样性和包容性，但是如果技术本身存在歧视和偏见，就会对特定群体造成不公平待遇。例如，如果人脸识别技术不能准确识别某些人种或者性别的面部特征，就可能对这些人造成不公正的待遇。</p><p>3.误判和误识别问题</p><p>FaceID技术的准确性和可靠性是一个重要的问题。如果技术本身存在误判和误识别的问题，就可能对用户的生活和工作造成不良影响。例如，如果人脸识别技术误认为某个人是罪犯或者恐怖分子，就可能引发不必要的调查和麻烦。</p><p>4.监控和跟踪问题</p><p>FaceID技术可以用于监控和跟踪用户的行为和活动，这可能会对用户的自由和隐私造成威胁。如果技术被滥用，就可能导致对个人自由和权利的侵犯。</p><h2 id="7-3-案例分析"><a href="#7-3-案例分析" class="headerlink" title="7.3 案例分析"></a>7.3 案例分析</h2><p>2017年，一名中国女性发现她的同事可以用FaceID解锁她的iPhone X，她怀疑苹果公司的人脸识别技术有缺陷，无法区分不同的亚洲面孔1。这引发了人们对FaceID的准确性和安全性的质疑，以及对苹果公司是否尊重不同种族和文化差异的人脸特征的担忧。</p><p>2018年，一名美国男子告诉媒体，他的10岁儿子可以用FaceID解锁他的iPhone X，他认为这是一种安全漏洞，可能导致未经授权的访问和隐私泄露2。这引发了人们对FaceID是否能够有效区分亲属和陌生人的人脸的疑问，以及对苹果公司是否充分考虑了家庭共享设备的场景的质疑。</p><p>2019年，一名美国女子发现她的前男友可以用FaceID解锁她的iPhone XR，她怀疑他在她睡觉时用她的脸注册了FaceID，从而窃取了她的个人信息和社交账号3。这引发了人们对FaceID是否容易被欺骗和滥用的担忧，以及对苹果公司是否应该提供更多的保护措施和提示信息的建议。</p><p>以上案例都反映了苹果公司在开发和推广FaceID时可能存在的职业道德和伦理问题，主要包括以下几个方面：</p><p>1 FaceID是否能够保证高度的准确性和可靠性，避免误识别或被欺骗的风险？</p><p>2. FaceID是否能够尊重用户的隐私权和自主权，防止用户的人脸数据被非法获取或滥用？</p><p>3. FaceID是否能够考虑不同用户的需求和场景，提供适当的选项和提示信息？</p><p>4. FaceID是否能够遵循公平和多样性的原则，不歧视或偏见任何种族、性别、年龄或其他特征？</p><p>要解决这些问题，可能需要苹果公司在技术、法律、道德等方面做出更多努力。例如：</p><p>1. 在技术方面，苹果公司可以不断改进FaceID的算法和硬件，提高其识别率和安全性，同时也要注意测试其在不同环境和条件下的表现。</p><p>2. 在法律方面，苹果公司可以遵守相关国家和地区对于人脸识别技术的法规和标准，明确其对于用户人脸数据的收集、存储、使用和共享等方面的责任和义务，并在用户协议中进行充分披露。</p><p>3. 在道德方面，苹果公司可以倡导负责任的创新文化，尊重用户的选择和意愿。</p><h1 id="8．FaceID产生的知识产权法律问题"><a href="#8．FaceID产生的知识产权法律问题" class="headerlink" title="8．FaceID产生的知识产权法律问题"></a>8．FaceID产生的知识产权法律问题</h1><h2 id="8-1-涉及的知识产权"><a href="#8-1-涉及的知识产权" class="headerlink" title="8.1 涉及的知识产权"></a>8.1 涉及的知识产权</h2><p>1.专利</p><p>FaceID 技术可能涉及到苹果公司的专利。苹果公司在 FaceID 技术中使用了结构光技术，这种技术可能拥有专利保护。如果其他公司使用类似的技术，可能会涉及到侵犯苹果公司的专利权。另外，苹果公司还可能拥有与 FaceID 技术相关的其他专利，例如用于面部识别的算法和软件。</p><p>2.商标</p><p>FaceID 是苹果公司的商标，其他公司不能随意使用 FaceID 这个名称。如果其他公司使用类似的名称来标识他们的人脸识别技术，可能会侵犯苹果公司的商标权。</p><p>3.版权</p><p>FaceID 技术涉及到的软件和算法可能受到版权保护。如果其他公司在他们的产品中使用了与 FaceID 技术类似的软件和算法，可能会涉及到版权侵犯。</p><h2 id="8-2知识产权法律问题"><a href="#8-2知识产权法律问题" class="headerlink" title="8.2知识产权法律问题"></a>8.2知识产权法律问题</h2><p>1.侵犯专利权</p><p>如果其他公司使用类似的结构光技术来开发自己的人脸识别技术，可能会侵犯苹果公司的专利权。苹果公司可以通过诉讼来维护自己的专利权，并要求其他公司停止使用类似的技术，并赔偿损失。</p><p>2.侵犯商标权</p><p>如果其他公司使用类似的名称来标识他们的人脸识别技术，可能会侵犯苹果公司的商标权。苹果公司可以通过诉讼来维护自己的商标权，并要求其他公司停止使用类似的名称，并赔偿损失。</p><p>3.侵犯版权</p><p>如果其他公司在他们的产品中使用了与 FaceID 技术类似的软件和算法，可能会涉及到版权侵犯。苹果公司可以通过诉讼来维护自己的版权，并要求其他公司停止使用类似的软件和算法，并赔偿损失。</p><h2 id="8-3法律责任"><a href="#8-3法律责任" class="headerlink" title="8.3法律责任"></a>8.3法律责任</h2><p>1.赔偿损失</p><p>如果其他公司侵犯了苹果公司的知识产权，他们需要对苹果公司造成的损失进行赔偿。赔偿金额可能包括苹果公司因此遭受的直接经济损失、间接经济损失、名誉损失等。赔偿金额的计算方法可能因案件而异，通常会考虑侵权行为的性质、侵权方的过错程度、赔偿方的经济能力等因素。</p><p>2.停止侵权行为</p><p>如果其他公司侵犯了苹果公司的知识产权，他们需要停止侵权行为。具体来说，他们可能需要停止使用与 FaceID 技术类似的结构光技术、商标和软件算法等，以避免进一步的侵权行为。</p><p>3.其他法律后果</p><p>如果其他公司侵犯了苹果公司的知识产权，他们可能还需要承担其他法律后果。例如，他们可能需要承担民事、行政或刑事责任，视具体情况而定。</p><h2 id="8-4-案例分析"><a href="#8-4-案例分析" class="headerlink" title="8.4 案例分析"></a>8.4 案例分析</h2><p>1. 苹果公司被指控侵犯了一家名为 Secure Cam 的公司的专利，该专利涉及使用红外摄像头进行面部识别的技术1。Secure Cam 要求苹果停止销售 iPhone X，并赔偿损失和律师费。苹果公司否认了侵权指控，并表示 Secure Cam 的专利是无效的，因为它没有披露任何新颖或有创造性的内容2。这个案例的分析是，苹果公司可能会以先发明或先使用的原则来反驳 Secure Cam 的主张，或者试图证明 Secure Cam 的专利不符合专利法的要求，例如明显性或非显而易见性。</p><p>2. 苹果公司被指控侵犯了一家名为 LBT IP 的公司的专利，该专利涉及使用面部识别技术来解锁移动设备的技术3。LBT IP 要求苹果停止销售 iPhone 和 iPad，并赔偿损失和律师费。苹果公司尚未对此作出回应。这个案例的分析是，苹果公司可能会以自己的 Face ID 技术与 LBT IP 的专利技术有本质区别来辩护，或者试图证明 LBT IP 的专利不具有有效性或可执行性。</p><p>3. 苹果公司被指控侵犯了一家名为 Dot Projection 的公司的专利，该专利涉及使用点阵投影器来生成面部图像的技术。Dot Projection 要求苹果停止销售 iPhone X，并赔偿损失和律师费。苹果公司尚未对此作出回应。这个案例的分析是，苹果公司可能会以自己的原深感摄像头系统与 Dot Projection 的专利技术有显著差异来辩护，或者试图证明 Dot Projection 的专利不具有创新性或实用性。</p><h1 id="9．FaceID技术的可持续性"><a href="#9．FaceID技术的可持续性" class="headerlink" title="9．FaceID技术的可持续性"></a>9．FaceID技术的可持续性</h1><p>随着人脸识别技术在各个领域的广泛应用，苹果的FaceID技术因其高安全性和便利性而受到广泛关注和讨论。然而，作为一个复杂的工程问题，FaceID技术的可持续性需要从技术、环境、经济和社会等多个方面进行深入分析和评估。接下来我将从多个角度对苹果FaceID技术的可持续性进行全面分析。</p><h2 id="9-1-可持续性分析"><a href="#9-1-可持续性分析" class="headerlink" title="9.1 可持续性分析"></a>9.1 可持续性分析</h2><ol><li>技术方面</li></ol><p>FaceID技术基于3D结构光技术，使用红外线光投射一种图案到用户的面部，然后测量该图案的扭曲来创建面部的三维模型。与传统的2D图像识别技术相比，3D结构光技术更为安全和准确，因为它可以识别面部的特定特征，如深度和轮廓，这些特征很难被仿造或复制。此外，FaceID还具有自适应学习和更新功能，可以根据用户面部特征的变化进行调整和更新，保证持续的识别准确率和安全性。</p><p>此外，苹果还实施了严格的措施来保护用户面部信息的隐私。面部信息仅存储在用户设备上，并受到安全信封的加密和保护。面部信息不会与苹果或任何第三方应用程序共享，从而确保用户完全掌控其个人数据。</p><p>总体而言，从技术角度来看，FaceID技术具有高可持续性。其3D结构光技术具有高度的安全性和准确性，其自适应学习和更新功能保证了持续的准确性和安全性。此外，其隐私保护措施确保用户完全掌控其个人数据。</p><ol><li>环境方面</li></ol><p>从环境角度来看，FaceID技术的生产和使用对环境影响相对较小。苹果一直致力于环保，采用可再生能源和可持续材料生产其产品，减少碳排放和资源浪费。此外，使用FaceID技术可以减少纸质文件和卡片的使用，减少资源消耗和环境污染。</p><p>然而，仍存在一些潜在的环境问题需要解决。例如，FaceID技术的生产需要稀土金属，这些金属通常在环境敏感区域开采，如果管理不当可能会造成环境损害。此外，由于FaceID是移动设备的一个功能，生产和处理这些设备也可能对环境产生影响。因此，苹果需要继续改善其供应链的可持续性，减少产品对环境的影响。</p><ol><li>经济方面</li></ol><p>从经济角度来看，FaceID技术对商业模式和产业链具有积极的影响。随着FaceID技术的广泛采用，越来越多的企业和组织将其用于身份验证和安全，促进了相关产业链的发展。此外，FaceID技术的应用可以降低企业成本，提高效率，增强企业的竞争力和可持续性。</p><p>然而，仍存在一些潜在的经济问题需要关注。例如，FaceID技术可能会增加移动设备的成本，这可能会限制某些用户的购买力和可访问性。此外，随着FaceID技术的越来越广泛应用，可能会出现对就业的影响，因为一些工作可能会自动化或变得多余。因此，苹果需要平衡FaceID技术的经济效益与其对可负担性、可访问性和就业的潜在影响。</p><ol><li>社会方面</li></ol><p>从社会角度来看，FaceID技术对社会安全和个人隐私保护具有积极影响。FaceID使用高度安全的人脸识别技术，可以有效地防止身份欺诈和信息泄露，确保社会安全和稳定。此外，FaceID还注重个人隐私保护，不会收集用户的面部信息或其他私人数据，保护用户的个人隐私权。</p><p>然而，仍存在一些潜在的社会问题需要关注。例如，人脸识别技术可能存在偏见和歧视，对某些种族或民族造成不公平的影响。此外，FaceID技术的广泛采用可能会引发关于隐私和数据安全的争议和担忧。因此，苹果需要继续关注社会反馈和舆情，改进其技术和政策，确保FaceID技术对社会的可持续性和公正性。</p><p>图8.iPone12与iPhone13刘海屏对比</p><h2 id="9-2-可持续性的考虑"><a href="#9-2-可持续性的考虑" class="headerlink" title="9.2 可持续性的考虑"></a>9.2 可持续性的考虑</h2><p>1. 能源效率：FaceID技术需要使用TrueDepth摄像头来扫描面部特征，这会消耗设备的电量。但相比传统的指纹识别技术，FaceID技术的功耗更低，因为TrueDepth摄像头只有在需要时才会启动，而且扫描速度很快，所以不会对设备的电池寿命产生太大影响。</p><p>2. 可靠性：FaceID技术的可靠性是一个重要的考虑因素。如果FaceID无法准确识别用户的面部特征，可能会导致用户无法解锁设备或进行身份验证。因此，FaceID技术需要经过严格的测试和验证，确保在不同的光照、角度和环境条件下都能够准确识别用户的面部特征。</p><p>3. 隐私保护：FaceID技术涉及到用户的面部特征信息，因此需要保护用户的隐私。苹果公司采用了一些措施来保护用户的隐私，例如将FaceID数据存储在设备本地而不是云端，采用了安全芯片来加密FaceID数据等。</p><p>4. 可持续性更新：FaceID技术需要不断更新来提高准确性和安全性，因此苹果公司需要不断推出更新来改进FaceID技术。这些更新需要保证向后兼容性，以确保老设备也能够获得更新。</p><h1 id="10．模拟推演FaceID技术的决策与管理的过程"><a href="#10．模拟推演FaceID技术的决策与管理的过程" class="headerlink" title="10．模拟推演FaceID技术的决策与管理的过程"></a>10．模拟推演FaceID技术的决策与管理的过程</h1><h2 id="10-1-推演前的考虑"><a href="#10-1-推演前的考虑" class="headerlink" title="10.1 推演前的考虑"></a>10.1 推演前的考虑</h2><p>为了模拟推演FaceID技术的决策与管理的过程，我们需要考虑以下几个方面：</p><ol><li>技术开发：</li></ol><blockquote><p>人脸识别算法的精度和速度，以及对不同人种、年龄、性别、姿态等情况的适应性；</p><p>系统的安全性和稳定性，避免被黑客攻击或者出现系统故障等问题；</p><p>持续的测试和优化，确保技术的可靠性和优秀的用户体验。</p></blockquote><ol><li>营销推广：</li></ol><blockquote><p>不同市场和用户群体的需求和习惯；</p><p>各种推广渠道的效果和成本；</p><p>竞争对手的策略和市场占有率。</p></blockquote><ol><li>用户反馈：</li></ol><blockquote><p>用户遇到的问题和建议，以及对用户需求的分析；</p><p>问题解决的速度和效果；</p><p>用户对技术和服务的满意度和忠诚度。</p></blockquote><ol><li>数据管理：</li></ol><blockquote><p>数据的收集、存储和使用规则；</p><p>数据的保密性和完整性；</p><p>遵守相关的法律法规，对用户的隐私和数据安全进行保护。</p></blockquote><ol><li>法律合规：</li></ol><blockquote><p>相关的法律法规和行业标准；</p><p>技术开发、数据管理和用户隐私等方面的合法性和合规性；</p><p>与法律专家进行沟通和咨询，确保技术的合法性和合规性。</p></blockquote><ol><li>团队管理：</li></ol><blockquote><p>团队成员之间的协作和沟通；</p><p>团队整体的工作效率和质量；</p><p>团队成员的培训和激励，提高团队成员的技能和积极性。</p></blockquote><ol><li>持续创新：</li></ol><blockquote><p>技术创新和产品创新，以满足不断变化的市场需求；</p><p>市场调研和用户调研，了解用户需求和市场趋势；</p><p>调整产品策略和技术方向，以保持竞争优势和创新能力。</p></blockquote><p>每个方面都包含多个因素和变化，需要综合考虑和平衡，以确保FaceID技术的持续发展和用户的满意度。</p><p>图9. Apple Park</p><h2 id="10-2-模拟推演FaceID技术的决策与管理的步骤"><a href="#10-2-模拟推演FaceID技术的决策与管理的步骤" class="headerlink" title="10.2 模拟推演FaceID技术的决策与管理的步骤"></a>10.2 模拟推演FaceID技术的决策与管理的步骤</h2><p>1. 确定技术开发团队，并制定开发计划：</p><p>在确定技术开发团队时，需要考虑团队成员的技术能力和经验，以及团队之间的协作和沟通能力。可以通过面试、技能测试等方式进行筛选和评估。在制定开发计划时，需要考虑技术开发的时间、资源和进度等因素，确保技术开发能够按时、按质量进行。</p><ol><li>建立营销推广团队，并制定推广策略：</li></ol><p>在建立营销推广团队时，需要考虑团队成员的市场推广能力和经验，以及团队之间的协作和沟通能力。可以通过面试、经验评估等方式进行筛选和评估。在制定推广策略时，需要考虑不同市场和用户群体的需求和特点，选择合适的推广渠道和方式。可以通过调研、数据分析等方式进行市场分析和用户分析，以便更好地了解用户需求和市场变化。</p><ol><li>设立用户反馈机制，并建立问题解决流程：</li></ol><p>在设立用户反馈机制时，需要考虑用户提出问题的渠道和方式，以及反馈的信息如何收集、处理和回应。可以通过建立客服团队、在线反馈渠道等方式，让用户可以方便地提出问题和建议。在建立问题解决流程时，需要考虑问题的分类、优先级和解决时间等因素。可以通过建立问题反馈和解决的流程，确保问题能够及时得到处理和解决。</p><ol><li>设立数据管理系统，并建立数据安全和隐私保护制度：</li></ol><p>在设立数据管理系统时，需要考虑数据的收集、存储、处理和使用等方面。可以建立数据管理团队，负责数据管理系统的建设和维护。在建立数据安全和隐私保护制度时，需要考虑数据的安全性、保密性和合规性等因素。可以通过制定数据安全和隐私保护制度、加密和备份等措施，确保数据的安全和保护。</p><ol><li>设立合规团队，并建立合规制度和流程：</li></ol><p>在设立合规团队时，需要考虑合规团队的职责和成员的专业能力。可以通过招聘、培训等方式建立合规团队。在建立合规制度和流程时，需要考虑相关的法律法规和政策，以及技术开发、数据管理和用户隐私等方面的合规要求。可以通过与法律专家沟通和咨询，制定合规制度和流程。</p><ol><li>定期对技术开发、营销推广、用户反馈、数据管理和合规等方面进行评估和调整：</li></ol><p>在定期对技术开发、营销推广、用户反馈、数据管理和合规等方面进行评估和调整时，需要考虑市场变化、用户需求和技术发展等因素。可以通过数据分析、用户反馈和市场调研等方式，了解用户需求和市场变化，以便及时进行调整和优化。</p><ol><li>与其他技术和应用的集成方面：</li></ol><p>考虑将FaceID技术与其他技术和应用进行集成，以便更好地满足用户需求。例如，可以将FaceID技术与支付系统、门禁系统等应用进行集成，提高系统的安全性和便利性。</p><ol><li>团队管理方面：</li></ol><p>建立一个高效的团队管理机制，确保团队成员之间的协作和沟通，以及团队整体的工作效率。同时，还需要对团队成员进行培训和激励，提高团队成员的技能</p><p>每个方面都包含多个因素和变化，需要综合考虑和平衡，以确保FaceID技术的持续发展和用户的满意度。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲着没事对比ChatGPT-3.5和ChatGPT-4编写的小说开头</title>
      <link href="/post/110aabbd.html"/>
      <url>/post/110aabbd.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题：请你帮我写一个武侠小说的开头"><a href="#问题：请你帮我写一个武侠小说的开头" class="headerlink" title="问题：请你帮我写一个武侠小说的开头"></a>问题：请你帮我写一个武侠小说的开头</h3><h3 id="ChatGPT-3-5"><a href="#ChatGPT-3-5" class="headerlink" title="ChatGPT-3.5"></a>ChatGPT-3.5</h3><p>在一个风雨交加的夜晚，江湖上流传着一个传说。传说中有一个神秘的武功，只要练成了它，便可成为武林中的顶级高手，无人可敌。但是这个武功的绝学却被藏在了一个地方，只有能够通过几道考验的人才有机会学习到这门神功。</p><p>在这个夜晚，一个身穿黑色长袍的年轻人，手持一把宝剑，来到了传说中藏有这门武功的地方。在他面前，是一道巨大的瀑布，瀑布后面隐藏着那个传说中的秘密。</p><p>年轻人深吸一口气，决定开始他的考验，他跃起身形，飞跃向瀑布，同时挥剑斩向瀑布，希望能够通过这道考验，学会那门传说中的绝学。</p><p>这个年轻人会不会通过考验，学会那门传说中的绝学呢？江湖中，又会发生哪些事情呢？</p><h3 id="ChatGPT-4"><a href="#ChatGPT-4" class="headerlink" title="ChatGPT-4"></a>ChatGPT-4</h3><p>天风大陆，一个充满神秘和传奇的世界。在这片广袤的土地上，强者如林，无数英雄豪杰为了荣誉、权力、爱情、正义斗得不亦乐乎。江湖中，一个刀光剑影的故事正在悄然展开。</p><p>熊熊烈火映红了半边天，烟雾弥漫，一座寂静的山谷被火光照得如同白昼。火焰肆虐，无情地吞噬着一座座古老的宅院。在这片火海之中，一个身影如同幽灵般穿梭，脚下矫健如风，身影犹如流云，轻轻松松地避过了火焰的攻击。他的目光犀利，如同利刃般透射出强烈的戾气。</p><p>这个人名叫夜无痕，他是江湖中一个小有名气的侠客。此时此刻，他正全力闯入这场浩劫之中，寻找一件关乎天下的秘宝——玄天神石。</p><p>风吹过山谷，夜无痕矫健的身影犹如一阵疾风般穿过火海，最终来到一座古老的祠堂前。祠堂的门口，熊熊火焰仿佛遇到了什么奇异的阻力，没有涌入其中，让祠堂相对安全。</p><p>夜无痕深吸一口气，缓缓推开祠堂门，顿时一股浓烈的古香扑面而来。祠堂内充满了历史的沉积，厚重的尘埃见证了岁月的无情。夜无痕的目光在祠堂内扫视一圈，最后停留在一个神龛内的神秘石碑上。</p><p>石碑上刻满了古老的符文，充满了神秘的气息。夜无痕眼中闪过一丝惊喜，这就是他要找的玄天神石！他伸手将玄天神石握在手中，感受着其中蕴含的无尽力量，心中暗喜。</p><p>然而，就在此时，一道冰冷的声音突然传入夜无痕的耳中：“原来你就是那个夜无痕，想不到居然敢在这大火之中寻找玄天神石，你可真是不怕死啊。”</p><p>夜无痕脸色一变，他知道这一次，恐怕绝非易事。然而，为了拯救这个江湖，他别无选择。手中紧握着玄天神石，他决定勇敢地面对即将来临的一切挑战……</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/post/423abe9e.html"/>
      <url>/post/423abe9e.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、第一次初始化"><a href="#1、第一次初始化" class="headerlink" title="1、第一次初始化"></a>1、第一次初始化</h3><ul><li>git init<br>git add .<br>git commit -m ‘first commit’<br>git remote add origin git@github.com:帐号名/仓库名.git<br>git pull origin master<br>git push origin master # -f 强推</li><li>git clone git@github.com:git帐号名/仓库名.git</li></ul><h3 id="2、工作基本操作"><a href="#2、工作基本操作" class="headerlink" title="2、工作基本操作"></a>2、工作基本操作</h3><ul><li>git checkout master 切到主分支</li><li>git fetch origin 获取最新变更</li><li>git checkout -b dev origin/master 基于主分支创建dev分支</li><li>git add . 添加到缓存</li><li>git commit -m ‘xxx’ 提交到本地仓库</li><li>git fetch origin 获取最新变更</li></ul><h3 id="3、初始化仓库"><a href="#3、初始化仓库" class="headerlink" title="3、初始化仓库"></a>3、初始化仓库</h3><p>git init</p><h3 id="4、查看仓库当前状态"><a href="#4、查看仓库当前状态" class="headerlink" title="4、查看仓库当前状态"></a>4、查看仓库当前状态</h3><p>git status</p><h3 id="5、文件相关操作"><a href="#5、文件相关操作" class="headerlink" title="5、文件相关操作"></a>5、文件相关操作</h3><p><strong>将文件添加到仓库</strong>：</p><ul><li>git add 文件名 将工作区的某个文件添加到暂存区</li><li>git add . 将当前工作区的所有文件都加入暂存区</li><li>git add -u 添加所有被tracked文件中被修改或删除的文件信息到暂存区，不处理untracked的文件</li><li>git add -A 添加所有被tracked文件中被修改或删除的文件信息到暂存区，包括untracked的文件</li><li>git add -i 进入交互界面模式，按需添加文件到缓存区</li></ul><p><strong>将暂存区文件提交到本地仓库</strong>：</p><ul><li>git commit -m “提交说明” 将暂存区内容提交到本地仓库</li><li>git commit -a -m “提交说明” 跳过缓存区操作，直接把工作区内容提交到本地仓库</li></ul><p><strong>比较文件异同</strong></p><ul><li>git diff 工作区与暂存区的差异</li><li>git diff 分支名 工作区与某分支的差异，远程分支这样写：remotes/origin/分支名</li><li>git diff HEAD 工作区与HEAD指针指向的内容差异</li><li>git diff 提交id 文件路径 工作区某文件当前版本与历史版本的差异</li><li>git diff –stage 工作区文件与上次提交的差异(1.6 版本前用 –cached)</li><li>git diff 版本TAG 查看从某个版本后都改动内容</li><li>git diff 分支A 分支B 比较从分支A和分支B的差异(也支持比较两个TAG)</li><li>git diff 分支A…分支B 比较两分支在分开后各自的改动</li></ul><p>另外：如果只想统计哪些文件被改动，多少行被改动，可以添加 –stat 参数</p><h3 id="6、查看历史记录"><a href="#6、查看历史记录" class="headerlink" title="6、查看历史记录"></a>6、查看历史记录</h3><ul><li>git log 查看所有commit记录(SHA-A校验和，作者名称，邮箱，提交时间，提交说明)</li><li>git log -p -次数 查看最近多少次的提交记录</li><li>git log –stat 简略显示每次提交的内容更改</li><li>git log –name-only 仅显示已修改的文件清单</li><li>git log –name-status 显示新增，修改，删除的文件清单</li><li>git log –oneline 让提交记录以精简的一行输出</li><li>git log –graph –all –online 图形展示分支的合并历史</li><li>git log –author=作者 查询作者的提交记录(和grep同时使用要加一个–all–match参数)</li><li>git log –grep=过滤信息 列出提交信息中包含过滤信息的提交记录</li><li>git log -S查询内容 和–grep类似，S和查询内容间没有空格</li><li>git log fileName 查看某文件的修改记录</li></ul><h3 id="7、代码回滚"><a href="#7、代码回滚" class="headerlink" title="7、代码回滚"></a>7、代码回滚</h3><ul><li>git reset HEAD^ 恢复成上次提交的版本</li><li>git reset HEAD^^ 恢复成上上次提交的版本，就是多个^，以此类推或用~次数</li><li>git reflog</li><li>git reset –hard 版本号</li><li>–soft：只是改变HEAD指针指向，缓存区和工作区不变；</li><li>–mixed：修改HEAD指针指向，暂存区内容丢失，工作区不变；</li><li>–hard：修改HEAD指针指向，暂存区内容丢失，工作区恢复以前状态；</li></ul><h3 id="8、版本库相关操作"><a href="#8、版本库相关操作" class="headerlink" title="8、版本库相关操作"></a>8、版本库相关操作</h3><ul><li>删除版本库文件：git rm 文件名</li><li>版本库里的版本替换工作区的版本：git checkout — test.txt</li></ul><h3 id="9、远程仓库相关操作"><a href="#9、远程仓库相关操作" class="headerlink" title="9、远程仓库相关操作"></a>9、远程仓库相关操作</h3><p><strong>同步远程仓库</strong>：git push -u origin master</p><p><strong>本地仓库内容推送到远程仓库</strong>：git remote add origin git@github.com:帐号名/仓库名.git</p><p><strong>从远程仓库克隆项目到本地</strong>：git clone git@github.com:git帐号名/仓库名.git</p><p><strong>查看远程库信息</strong>：git remote</p><p><strong>拉取远程分支到本地仓库</strong>：</p><ul><li>git checkout -b 本地分支 远程分支 # 会在本地新建分支，并自动切换到该分支</li><li>git fetch origin 远程分支:本地分支 # 会在本地新建分支，但不会自动切换，还需checkout</li><li>git branch –set-upstream 本地分支 远程分支 # 建立本地分支与远程分支的链接</li></ul><p><strong>同步远程仓库更新</strong>：：git fetch origin master</p><h3 id="10、分支相关操作"><a href="#10、分支相关操作" class="headerlink" title="10、分支相关操作"></a>10、分支相关操作</h3><p><strong>创建分支</strong>：git checkout -b dev  -b表示创建并切换分支<br>上面一条命令相当于一面的二条：<br>git branch dev  创建分支<br>git checkout dev  切换分支</p><p><strong>查看分支</strong>：git branch</p><p><strong>合并分支</strong>：</p><ul><li>git merge dev #用于合并指定分支到当前分支</li><li>git merge –no-ff -m “merge with no-ff” dev #加上–no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并</li></ul><p><strong>删除分支</strong>：git branch -d dev</p><p><strong>查看分支合并图</strong>：git log –graph –pretty=oneline –abbrev-commit</p><h3 id="11、git相关配置"><a href="#11、git相关配置" class="headerlink" title="11、git相关配置"></a>11、git相关配置</h3><p>安装完Git后第一件要做的事，设置用户信息(global可换成local在单独项目生效)：</p><ul><li>git config –global user.name “用户名” # 设置用户名</li><li>git config –global user.email “用户邮箱” #设置邮箱</li><li>git config –global user.name # 查看用户名是否配置成功</li><li>git config –global user.email # 查看邮箱是否配置</li></ul><h3 id="12、其他查看配置相关"><a href="#12、其他查看配置相关" class="headerlink" title="12、其他查看配置相关"></a>12、其他查看配置相关</h3><ul><li>git config –global –list # 查看全局设置相关参数列表</li><li>git config –local –list # 查看本地设置相关参数列表</li><li>git config –system –list # 查看系统配置参数列表</li><li>git config –list # 查看所有Git的配置(全局+本地+系统)</li><li>git config –global color.ui true //显示git相关颜色</li></ul><h3 id="13、撤消某次提交"><a href="#13、撤消某次提交" class="headerlink" title="13、撤消某次提交"></a>13、撤消某次提交</h3><ul><li>git revert HEAD # 撤销最近的一个提交</li><li>git revert 版本号 # 撤销某次commit</li></ul><h3 id="14、标签"><a href="#14、标签" class="headerlink" title="14、标签"></a>14、标签</h3><ul><li>git tag 标签 //打标签命令，默认为HEAD</li><li>git tag //显示所有标签</li><li>git tag 标签 版本号 //给某个commit版本添加标签</li><li>git show 标签 //显示某个标签的详细信息</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/post/d0edc1ed.html"/>
      <url>/post/d0edc1ed.html</url>
      
        <content type="html"><![CDATA[<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><p>切换目录 <code>cd</code></p><p>查看目录 <code>ls</code></p><ul><li><code>-l</code>  列出文件详细信息 或者直接<code>ll</code></li><li><code>-a</code>  列出当前目录下所有文件及目录，包括隐藏的a(all)</li></ul><p>创建目录 <code>mkdir</code></p><ul><li>-p    创建目录，若无父目录，则创建p(parent)</li></ul><p>输出信息 <code>echo</code></p><p>打印文件到命令行(查看文件) <code>cat</code></p><p>改变文件所属用户 <code>chown</code></p><p>改变文件所属组 <code>chgrp</code></p><p>下载文件 <code>wget</code></p><p>在文本文件中查找某个字符串 <code>grep</code></p><p>统计文本中行数、字数、字符数 <code>wc</code></p><p>部分显示 <code>more/less</code></p><p>查找文件 <code>find / -name &#39;auto.cnf&#39;</code></p><p>创建空文件 <code>touch</code></p><p>复制文件 <code>cp</code></p><p>移动或重命名 <code>mv</code></p><p>删除文件 <code>rm</code></p><ul><li>-r   递归删除，可删除子目录及文件</li><li>-f   强制删除</li></ul><p>删除空目录 <code>rmdir</code></p><p>树形结构显示目录，需要安装tree包  <code>tree</code></p><p>显示当前目录 <code>pwd</code></p><p>创建链接文件 <code>ln</code></p><p>分页显示文本文件内容 <code>more、less</code></p><p>显示文件头、尾内容  <code>head、tail</code></p><h3 id="vim操作"><a href="#vim操作" class="headerlink" title="vim操作"></a>vim操作</h3><p>进入编辑器 <code>vi/vim</code>，vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。</p><ul><li>进入编辑模式插入 <code>i</code></li><li>退出编辑模式 <code>esc</code></li><li>保存:后面输入<code>w</code></li><li>退出:后面输入<code>q</code></li><li>不保存退出:后面输入<code>q!</code></li><li>显示行号 <code>set number</code></li><li>查找关键字 <code>/xxxx</code> 按n跳到下一个，shift+n上一个</li><li>复制光标所在行，并粘贴 <code>yyp</code></li><li>h(左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)</li></ul><h3 id="打包压缩相关命令"><a href="#打包压缩相关命令" class="headerlink" title="打包压缩相关命令"></a>打包压缩相关命令</h3><p>打包压缩 <code>tar\gzip\bzip2</code></p><ul><li><code>-c</code>归档文件</li><li><code>-x</code> 压缩文件</li><li><code>-z</code> gzip压缩文件</li><li><code>-j</code> bzip2压缩文件</li><li><code>-v</code> 显示压缩或解压缩过程 v(view)</li><li><code>-f</code> 使用档名</li></ul><p>例：</p><p>只打包，不压缩:<code>tar -cvf /home/abc.tar /home/abc</code></p><p>打包，并用gzip压缩:<code>tar -zcvf /home/abc.tar.gz /home/abc</code></p><p>打包，并用bzip2压缩:<code>tar -jcvf /home/abc.tar.bz2 /home/abc</code></p><p>如果想解压缩，就直接替换上面的命令<code>tar -cvf / tar -zcvf / tar -jcvf</code> 中的“c” 换成“x” 就可以了。</p><h3 id="Linux管道"><a href="#Linux管道" class="headerlink" title="Linux管道"></a>Linux管道</h3><p>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。</p><p>例：grep -r “close” /home/* | more   在home目录下所有文件中查找，包括close的文件，并分页输出。</p><h2 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h2><h3 id="三种基本权限"><a href="#三种基本权限" class="headerlink" title="三种基本权限"></a>三种基本权限</h3><p>R：读，数值表示为 4</p><p>W：写，数值表示为 2</p><p>X：可执行，数值表示为1</p><h3 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h3><p>更改权限：<code>sudo chmod</code> [u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x]  目录名</p><p>例如：有一个文件 filename，权限为<code>-rw-r----x</code> ,将权限值改为<code>-rwxrw-r-x</code>，用数值表示为765</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod u+x g+w o+r filename` 也可以用数值表示 `sudo chmod 765 filename</span><br></pre></td></tr></table></figure><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><h3 id="命令行运行"><a href="#命令行运行" class="headerlink" title="命令行运行"></a>命令行运行</h3><p>运行<code>./filename</code></p><p>退出<code>ctrl+c</code></p><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><p>运行 <code>nohup command &gt;out.file 2&gt;&amp;1 &amp;</code></p><p>退出 <code>ps -ef |grep 关键字 |awk &#39;&#123;print $2&#125;&#39;|xarg kill -9</code></p><h3 id="服务方式运行"><a href="#服务方式运行" class="headerlink" title="服务方式运行"></a>服务方式运行</h3><p>设置开机启动 <code>systemctl enable</code></p><p>启动<code>systemctl start</code></p><p>关闭<code>systemctl stop</code></p><h2 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h2><h3 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h3><p>显示指定文件的详细信息，比ls更详细 <code>stat</code></p><p>显示在线登陆用户 <code>who</code></p><p>显示当前操作用户<code>whoami</code></p><p>显示主机名<code>hostname</code></p><p>显示系统信息<code>uname</code></p><p>动态显示当前耗费资源最多进程信息<code>top</code></p><p>显示瞬间进程状态  <code>ps \ ps -aux</code></p><p>查看目录大小 <code>du -h /home</code> (带有单位显示目录信息)</p><p>查看磁盘大小 <code>df -h</code> (带有单位显示磁盘信息)</p><p>查看网络情况 <code>ifconfig</code></p><p>测试网络连通 <code>ping</code></p><p>显示网络状态信息 <code>netstat</code></p><p>命令不会用了，看文档 如：<code>man grep</code></p><p>清屏 <code>clear</code></p><p>对命令重命名 <code>alias</code> ，如：<code>alias showmeit=&quot;ps -aux&quot;</code> ，解除使用<code>unaliax showmeit</code></p><p>杀死进程 <code>kill</code>，可以先用<code>ps</code> 或 <code>top</code>命令查看进程的id，然后再用kill命令杀死进程。<code>kill -9</code> 强制删除</p><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>查看防火墙状态 <code>firewall-cmd --state</code></p><p>停止防火墙 <code>systemctl stop firewalld.service</code></p><p>禁止firewall开机启动 <code>systemctl disable firewalld.service</code></p><h3 id="关机和重启"><a href="#关机和重启" class="headerlink" title="关机和重启"></a>关机和重启</h3><p>关机 <code>shutdown -h now</code></p><ul><li>-r 关机重启</li><li>-h 关机不重启</li><li>now 立刻关机</li></ul><p>重启 <code>reboot</code></p><p>关机  <code>halt</code></p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>查看网卡信息 <code>ifconfig</code></p><p>网络配置 <code>/etc/sysconfig/network-script/ifcfg-eth0</code></p><p>配置网卡 <code>/etc/udev/rules.d/70-persistent-net.rules</code></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>创建用户 <code>useradd</code></p><p>设置密码 <code>passwd</code></p><ul><li>存储组账号 <code>/etc/group</code></li><li>系统用户配置文件<code>/etc/passwd</code></li></ul><p>存储用户账号的密码 <code>/etc/shadow</code></p><p>存储用户组账号的密码<code>/etc/gshadow</code></p><p>用户名<code>useradd</code></p><p>用户名<code>userdel</code></p><p>用户名<code>adduser</code></p><p>组名<code>groupadd</code></p><p>组名<code>groupdel</code></p><p>给root设置密码<code>passwd root</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su root</span><br><span class="line">su - root</span><br></pre></td></tr></table></figure><p>系统环境变量<code>/etc/profile</code></p><p>用户环境变量<code>bash_profile</code></p><p>用户环境变量<code>.bashrc</code></p><p><code>su user</code> 切换用户，加载配置文件.bashrc</p><p><code>su - user</code> 切换用户，加载配置文件/etc/profile ，加载bash_profile</p><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><h3 id="下载rpm安装包方式"><a href="#下载rpm安装包方式" class="headerlink" title="下载rpm安装包方式"></a>下载rpm安装包方式</h3><p>安装 <code>rpm -i jdk-XXX_linux-x64_bin.rpm</code></p><p>查找 <code>rpm -qa | grep jdk</code></p><p>列表 <code>rpm -qa | more</code></p><blockquote><p>ubuntu dpkg 方式</p><p>查找dpkg -I | grep jdk</p><p>列表dpkg -I | more</p><p>安装dpkg -i jdk-XXX_linux-x64_bin.deb</p></blockquote><h3 id="yum方式"><a href="#yum方式" class="headerlink" title="yum方式"></a>yum方式</h3><p>搜索 <code>yum search jdk</code></p><p>安装 <code>yum install java-11-openjdk.x86_64</code></p><p>删除 <code>yum erase java-11 -openjdk.x86 64</code></p><p>配置文件 <code>/etc/yum.repos.d/CentOS-Base.repo</code></p><blockquote><p>ubuntu apt-get 方式</p><p>搜索 apt・cache search jdk</p><p>安装apt-get install openjdk-9-jdk</p><p>删除apt-get purge openjdk-9-jdk</p><p>配置文件/etc/apt/sources. Iist</p></blockquote><h3 id="下载压缩文件方式"><a href="#下载压缩文件方式" class="headerlink" title="下载压缩文件方式"></a>下载压缩文件方式</h3><p>编辑 .bashrc</p><p>环境变量配置</p><ul><li>打开环境变量文件 <code>vi /etc/profile</code></li><li>配置环境变量 <code>export JAVA_HOME=/root/j d k-XXX_lin ux-x64</code></li><li><code>export PATH=$JAVA HOME/bin:$PATH</code></li><li>刷新配置 <code>source /etc/profile</code></li></ul><p>最后，欢迎大家提问和交流。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/post/5d36ff15.html"/>
      <url>/post/5d36ff15.html</url>
      
        <content type="html"><![CDATA[<h3 id="Markdown-基本语法"><a href="#Markdown-基本语法" class="headerlink" title="Markdown 基本语法"></a>Markdown 基本语法</h3><h4 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h4><p>Markdown 语法利用输入#的数量来确定标题的级别。</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p>实现上述只需要在标题内容前加上#的数量和空格，这样 Markdown 语法就会把它们实现为对应的标题；当然在一些适配的编辑器里也可以使用　Ctrl　＋ 数字(1~6) 来快捷改变标题级别。</p><p>建议在 Typora 的设置中打开开启调试，这样就能在编辑界面快速查看源码和编辑源了。</p><p>笔记应用会利用级别标题来生成笔记的目录；</p><h4 id="换行语法"><a href="#换行语法" class="headerlink" title="换行语法"></a>换行语法</h4><p>在Markdown 中直接输入换行，将优先配置排版，这不是真正的换行，<strong>只需要在行末输入两个即以上的空格即可再回车即可执行真正的换行</strong>；</p><h4 id="段落语法"><a href="#段落语法" class="headerlink" title="段落语法"></a>段落语法</h4><p>要创建段落，请使用空白行将行或多行文本进行分隔。即在两个段落之间输入一个空行进行分隔，Markdown 会自动识别为段落。</p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p><p>例子:</p><ol><li>第一项 使用数字加英文句点，编辑项名称后使用回车会自动创建第二项；</li><li><p>这是第二项， 回车之后，Markdown 自动为你添加序号。</p><ol><li><p>这是第二项子项一 使用换行加 tab 键即可实现</p></li><li><p>这是第二项子项二</p></li></ol></li></ol><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p><p>例子：</p><ul><li>第一项</li><li>第一项子项</li><li><p>第二项</p><ol><li><p>第二项的有序子项 此处使用 换行 加 tab键 加 - 实现下一个无序子项；</p><ul><li><p>子项的无序子项</p><ul><li>子项的无序子项 此处使用 shift + tab键 ，实现第二个有序项；</li></ul></li></ul></li><li><p>第二个项的无序子项</p></li></ol></li></ul><h4 id="强调语法"><a href="#强调语法" class="headerlink" title="强调语法"></a>强调语法</h4><p>通过将文本设置为粗体或斜体来强调其重要性。</p><h4 id="粗体（Bold）"><a href="#粗体（Bold）" class="headerlink" title="粗体（Bold）"></a>粗体（Bold）</h4><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。<br><strong>这是一段粗体文本</strong></p><h4 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a>斜体（Italic）</h4><p><em>这是一段斜体文本</em><br>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><p><strong>粗体（Bold）和斜体（Italic）</strong></p><p><strong><em>这是一段粗斜体文本</em></strong><br>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。<br>要创建块引用，请在段落前添加一个 > 符号。  </p><h4 id="引用语法"><a href="#引用语法" class="headerlink" title="引用语法"></a>引用语法</h4><p>要创建块引用，请在段落前添加一个 > 符号。</p><blockquote><p>粗体（Bold）和斜体（Italic） 使用引用之后，文本样式会发生变化</p><blockquote><p>块引用可以嵌套。在要嵌套的段落前添加一个 >> 符号。</p></blockquote></blockquote><h4 id="分隔线语法"><a href="#分隔线语法" class="headerlink" title="分隔线语法"></a>分隔线语法</h4><p>要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—-) 或下划线 (___) ，并且不能包含其他内容。</p><hr><p>以上就是一个分隔线</p><h4 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h4><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。<br>超链接Markdown语法代码：[超链接显示名](超链接地址 “超链接title”)</p><h4 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h4><p>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p><hr><p>好了，以上就是我整理的 Markdown 的基本语法，掌握以上内容，你就可以用Typora(笔记应用)为自己写一篇笔记了。程序员生涯中的博客、文档、笔记大多都是用它写的。最重要的是，掌握这些，你就能高效的写出美观的笔记了，从此，开启你的学习生涯。（大家可以联系我下载Typora）</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
